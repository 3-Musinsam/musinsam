plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.epages.restdocs-api-spec' version "0.19.2"
}

group = 'com.musinsam'
version = '0.0.1-SNAPSHOT'

ext {
    set('springCloudVersion', "2024.0.1")
    set('querydslVersion', "5.0.0")
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':common')
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'

    // QueryDSL
    implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:3.0.0'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.19.2'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

def querydslDir = "src/main/generated"

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java", querydslDir]
        }
    }
}

clean {
    delete file(querydslDir)
}

tasks.withType(JavaCompile).configureEach {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

tasks.named('test') {
    useJUnitPlatform()
}
